on: 
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
name: Build & Release
jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1.5.0
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: 3.10.1
      - run: flutter pub get
      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      # - name: Analyze project source
      #   run: dart analyze
      # Not sure when -o web:build/web is there, if it will still be buildable
      # for the other targets, linux and apk
      # - run: dart run build_runner build
      - run: dart run build_runner build --delete-conflicting-outputs -o web:build/web/
      - run: flutter build web
      - run: flutter build linux
      - run: flutter build apk
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          # TODO: linux, also how to publish web to github pages
          artifacts: build/app/outputs/apk/debug/*
          tag: v0.0.${{ github.run_number }}

  # push to master
  # pull request on master
